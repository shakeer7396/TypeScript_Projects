1. What is Testing ?
A. Software Testing is the process of finding the errors of the software product before it is launched.
 Validate functioning and features of software

2. Types of testing 
A. Testing --> Manual testing  , Automation Testing

3. Testing By developers
A. Unit Testing,    --> Testing individual units of components
 Integration Testing,--> Testing between two units or components
  E to E Testing      --> Test Start to End complete project

4. React Testing Tools
A. a) Jest Framework     b) React Testing Library

5. Setup
A. npx create-react-app blog-app  -> Then enter cd blog-app ->then npm start 
    -> open terminal then enter npm run test

6. Start with basic javaScript file Testing Logic
---------------------------------------------------------------
A. Create sum.js file and do code there && create sum.test.js for testing the code with expected output
    Go to google enter jest then https://jestjs.io/ inside this page go to API and go below methods click this or see -> test(name, fn, timeout)  //It is a sintax for test function

    sum.js
    export default function sum(a,b){
    return a+b;
}

//Test function came from jest(); 3 parameters 1,2** Mandatory 3 is optional(setTimeout)
//Test function takes three parameters 1-message, 2-call back func (write inside tesing output logic), 3-setTimeout for setting time for how much time after output will show. Add after the func },there);

--> test & expect both came from Jest (render,screen) both came from React-Testing-Library

sum.test.js
import sum from "./sum";

test("testing for sum function-1",()=>{
expect(sum(10,20)).toBe(20)  //toBe means muje itna output chahiye batana hai
});

// Add more test functions this type also declare the variables there
test("testing for sum function-2",()=>{
    let a =10;
    let b =20;
    let output= 30;
    expect(sum(a,b)).toBe(output)  //toBe means muje itna output chahiye batana hai
    });


# 4 Understanding React Test Structure
------------------------------------
-> What need to import
-> How to render the component
-> How tests working with RTL
-> How test finding UI elements

--> All librariees are installed globally but we need to import some places
1.-> import { render, screen } from '@testing-library/react'; in App.js its comes by default
    -> render use karte hai component ko render karne k liye and screen use karte hai screen k vupar jo kuch be hai vusko test ko test karna chahte ho vusko screen k help se kar sakte hai
2.-->Jis component ko hum test karna chaahte hai vusko import karna hai
    -> Ek file k ander multiple files (components) ko test kar sakte hai [no problem].

App.js
    import { render, screen } from '@testing-library/react'; 
import App from './App';

test('renders learn react link', () => {    // TEST FUNCTION WITH 3 PARAMETERS
  render(<App />); // RENDERING THE COMPONENT WITH NAME
  const linkElement = screen.getByText(/learn react/i);     // SCREEN PE JO HAI VUSKE BASE PE TEST KARNA LIKE learn react inside this component showing in the screen RUNS PASS OR FAIL
  expect(linkElement).toBeInTheDocument();  // EXPECTED DOCUMENT ME JO HAI VO TEST KARNA CHAHIYE
});

#-> 5 Write First React Test
----------------------------------------
-> Make new Test function
-> Write test case for check text on screen
-> Write test for case-insentive text
-> Test title for image
-> Write multiple expect in the same test function

** All Code done there 

App.test.js
import {render, screen} from "@testing-library/react";
import App from "./App";

test("Test First React Test Case", ()=>{
  render(<App />)
  const text = screen.getByText(/First React Test Case/i); //Its a case sensitive but using /i acpt C&c
const title = screen.getByTitle("GoogleImage");
const text2 = screen.getByText(/Software Testing/i);
  expect(text).toBeInTheDocument();
  expect (title).toBeInTheDocument();
  expect (text2).toBeInTheDocument();

});

App.js
import "./App.css";

function App() {
  return (
    <div className="App">
      {/* You can add anything in start and end ogf the given text but not middle expected text is matching or not it will check these things */}
      <p>ABC First React test Case ABC123a</p>
      <p>Software Testing</p>
      <img   title="GoogleImage"
        src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRrfwAhgmyiHHQ7kj-aEbk9AGCKcwo0wYeuwg&s"
      />
    </div>
  );
}

export default App;

#-> 6 Test Input Box  (how to test input boxes)
----------------------------------------
-> Make input box in App Component
-> Write test case function
-> The test input box is present are not
-> Test input box
    *name, placeholder, id, value, type



